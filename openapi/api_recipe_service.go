// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Swagger Potion maker - OpenAPI 3.0
 *
 * Сервис изготовления зелий
 *
 * API version: 1.0.0
 */

package openapi

import (
	"log/slog"
	"context"
	"errors"
	"net/http"

	"github.com/donskova1ex/mylearningproject/internal/domain"
)

// RecipeAPIService is a service that implements the logic for the RecipeAPIServicer
// This service should implement the business logic for every endpoint for the RecipeAPI API.
// Include any external packages or services that will be required by this service.
type RecipesProcessor interface{
	RecipesList(ctx context.Context) ([]*domain.Recipe, error)
}

type RecipeAPIService struct {
	recipesProcessor RecipesProcessor
	log *slog.Logger
}

// NewRecipeAPIService creates a default api service
func NewRecipeAPIService(recipesProcessor RecipesProcessor,log *slog.Logger) *RecipeAPIService {
	return &RecipeAPIService{recipesProcessor : recipesProcessor, log : log}
}

// RecipesList - recipes list
func (s *RecipeAPIService) RecipesList(ctx context.Context) (ImplResponse, error) {
	// recipes, err := s.recipesProcessor.RecipesList()
	// if err != nil {
	// 	return Response(http.StatusInternalServerError, nil), fmt.Errorf("unable to get recipes: %w", err)
	// }
	// openApiRecepies := domainRecepiesToOpenApi()

	return Response(http.StatusNotImplemented, nil), nil

}

// func domainRecepiesToOpenApi(domainRecepies []*domain.Recipe) []*Recipe { //почему-то нет в ингредиентах, но есть в рецептах
// return nil
// }

// GetRecipe - Find recipe by paramets
func (s *RecipeAPIService) GetRecipe(ctx context.Context, id string, name string) (ImplResponse, error) {
	// TODO - update GetRecipe with the required logic for this service method.
	// Add api_recipe_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Recipe{}) or use other options such as http.Ok ...
	// return Response(200, Recipe{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetRecipe method not implemented")
}

// GetRecipeById - Find recipe by ID
func (s *RecipeAPIService) GetRecipeById(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update GetRecipeById with the required logic for this service method.
	// Add api_recipe_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Recipe{}) or use other options such as http.Ok ...
	// return Response(200, Recipe{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetRecipeById method not implemented")
}

// UpdateRecipeWithForm - Update a recipe by id
func (s *RecipeAPIService) UpdateRecipeWithForm(ctx context.Context, id string, recipe Recipe) (ImplResponse, error) {
	// TODO - update UpdateRecipeWithForm with the required logic for this service method.
	// Add api_recipe_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Recipe{}) or use other options such as http.Ok ...
	// return Response(200, Recipe{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(422, {}) or use other options such as http.Ok ...
	// return Response(422, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateRecipeWithForm method not implemented")
}

// DeleteRecipe - Delete recipe
func (s *RecipeAPIService) DeleteRecipe(ctx context.Context, id int64) (ImplResponse, error) {
	// TODO - update DeleteRecipe with the required logic for this service method.
	// Add api_recipe_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteRecipe method not implemented")
}
